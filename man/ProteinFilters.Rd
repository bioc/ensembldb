% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Classes.R, R/Methods-Filter.R
\docType{class}
\name{ProteinFilters}
\alias{ProtdomidFilter}
\alias{ProtdomidFilter-class}
\alias{ProteinFilters}
\alias{ProteinidFilter}
\alias{ProteinidFilter-class}
\alias{UniprotidFilter}
\alias{UniprotidFilter-class}
\alias{column,ProtdomidFilter,EnsDb,character-method}
\alias{column,ProtdomidFilter,EnsDb,missing-method}
\alias{column,ProtdomidFilter,missing,missing-method}
\alias{column,ProteinidFilter,EnsDb,character-method}
\alias{column,ProteinidFilter,EnsDb,missing-method}
\alias{column,ProteinidFilter,missing,missing-method}
\alias{column,UniprotidFilter,EnsDb,missing-method}
\alias{column,UniprotidFilter,missing,missing-method}
\alias{where,ProtdomidFilter,EnsDb,character-method}
\alias{where,ProtdomidFilter,EnsDb,missing-method}
\alias{where,ProtdomidFilter,missing,missing-method}
\alias{where,ProteinidFilter,EnsDb,character-method}
\alias{where,ProteinidFilter,EnsDb,missing-method}
\alias{where,ProteinidFilter,missing,missing-method}
\alias{where,UniprotidFilter,EnsDb,character-method}
\alias{where,UniprotidFilter,EnsDb,missing-method}
\alias{where,UniprotidFilter,missing,missing-method}
\title{Protein annotation related filters}
\usage{
ProteinidFilter(value, condition = "=")

UniprotidFilter(value, condition = "=")

ProtdomidFilter(value, condition = "=")

\S4method{where}{ProteinidFilter,missing,missing}(object, db, with.tables, ...)

\S4method{column}{ProteinidFilter,missing,missing}(object, db, with.tables, ...)

\S4method{where}{UniprotidFilter,missing,missing}(object, db, with.tables, ...)

\S4method{column}{UniprotidFilter,missing,missing}(object, db, with.tables, ...)

\S4method{where}{ProtdomidFilter,missing,missing}(object, db, with.tables, ...)

\S4method{column}{ProtdomidFilter,missing,missing}(object, db, with.tables, ...)
}
\arguments{
\item{value}{A character vector of length 1 or larger with the value(s)
for the filter.}

\item{condition}{A character of length 1 specifying the condition of the
filter. Can be one of \code{"="}, \code{"!="}, \code{"like"}, or, for
\code{value} of length larger 1 \code{"in"} and \code{"not in"}.}

\item{object}{A \code{ProteinidFilter}, \code{UniprotidFilter} or a
\code{ProtdomidFilter} object.}

\item{db}{Either missing or an \code{\linkS4class{EnsDb}} object.}

\item{with.tables}{Optional character vector specifying the database table
names on which the query should be performed. For internal use only.}
}
\value{
For \code{ProteinidFilter}: A \code{ProteinidFilter} object.

For \code{UniprotidFilter}: A \code{UniprotidFilter} object.

For \code{ProtdomidFilter}: A \code{ProtdomidFilter} object.

For \code{where}: A character with the \emph{where} condition of
the SQL query to be executed in the database.

For \code{column}: A character specifying the database column name
on which the filter will be applied.
}
\description{
These filters allow to query specific information from an
\code{\linkS4class{EnsDb}} database. Filters should be created using the
dedicated constructor functions \code{ProteinidFilter},
\code{ProtdomidFilter} and \code{UniprotidFilter}. Protein annotation-based
filters are:

The \code{ProteinidFilter} allows to filter based on the
(Ensembl) protein ID of the (coding) transcripts' proteins.

The \code{UniprotidFilter} allows to retrieve annotations
filtering by the provided Uniprot ID associated with the transcript's
protein.

The \code{ProtdomidFilter} allows to retrieve entries from
the database matching the provided filter criteria based on their protein
domain ID (\emph{protein_domain_id}).
}
\section{Slots}{

\describe{
\item{\code{condition}}{The condition to be used in the filter.}

\item{\code{value}}{The value(s) for the filter.}
}}
\note{
These filters can only be used if the \code{\linkS4class{EnsDb}}
database contains protein annotations, i.e. if \code{\link{hasProteinData}}
is \code{TRUE}. Also, only protein coding transcripts will have protein
annotations available, thus, non-coding transcripts/genes will not be
returned by the queries.

The \code{column} and \code{where} methods for the filter objects are
for internal use and not meant to be called directly by the user.
}
\examples{
library(EnsDb.Hsapiens.v75)
edb <- EnsDb.Hsapiens.v75
## Create a ProteinidFilter:
pf <- ProteinidFilter("ENSP00000362111")
pf
## Using this filter would retrieve all database entries matching the
## condition:
where(pf)
## i.e. all entries that are associated with a protein with the ID
## "ENSP00000362111"
if (hasProteinData(edb)) {
    res <- genes(edb, filter = pf)
    res
}

## To get all entries except those associated with that protein:
condition(pf) <- "!="
where(pf)

## UniprotidFilter:
uf <- UniprotidFilter("O60762")
## Get the transcripts encoding that protein:
if (hasProteinData(edb)) {
    transcripts(edb, filter = uf)
    ## The mapping Ensembl protein ID to Uniprot ID can however be 1:n:
    transcripts(edb, filter = TxidFilter("ENST00000371588"),
        columns = c("protein_id", "uniprot_id"))
}

## ProtdomidFilter:
pdf <- ProtdomidFilter("PF00335")
## Also here we could get all transcripts related to that protein domain
if (hasProteinData(edb)) {
    transcripts(edb, filter = pdf, columns = "protein_id")
}
}
\author{
Johannes Rainer
}
\seealso{
\link{RNA-DNA-filters} for filters using RNA/DNA annotations.
}

